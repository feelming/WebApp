{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nconst dummyUser = {\n  nickname: '코드',\n  Post: [],\n  Followings: [],\n  Followers: []\n};\nexport const initialState = {\n  isLoggedIn: false,\n  user: null,\n  signupData: {}\n}; // const dummy = {\n//     isLoggedIn: true,\n//     imagePaths: [],\n//     mainPosts: [{\n//         User: {\n//             id: 1,\n//             nickname: \"코드\",\n//         },\n//         content: \"첫 번째 게시글\",\n//         img: \"https://blog.yena.io/assets/post-img/171123-nachoi-300.jpg\"\n//     }],\n// };\n\nexport const LOG_IN = 'LOG_IN'; // 액션이 이름\n\nexport const LOG_OUT = 'LOG_OUT';\nexport const SIGN_UP = 'SIGN_UP';\nexport const loginAction = {\n  type: LOG_IN\n};\nexport const logoutAction = {\n  type: LOG_OUT\n};\nexport const signupAction = data => {\n  return {\n    type: SIGN_UP,\n    data: data\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: true,\n          user: dummyUser\n        });\n      }\n\n    case LOG_OUT:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false,\n          user: null\n        });\n      }\n\n    case SIGN_UP:\n      {\n        return _objectSpread({}, state, {\n          // user: action.data.user,\n          // id: action.data.id,\n          // nick: action.data.nick,\n          signupData: action.data\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mac/work/feelming/frontend/reducers/user.js"],"names":["dummyUser","nickname","Post","Followings","Followers","initialState","isLoggedIn","user","signupData","LOG_IN","LOG_OUT","SIGN_UP","loginAction","type","logoutAction","signupAction","data","reducer","state","action"],"mappings":";AAAA,MAAMA,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAE,IADI;AAEdC,EAAAA,IAAI,EAAE,EAFQ;AAGdC,EAAAA,UAAU,EAAE,EAHE;AAIdC,EAAAA,SAAS,EAAE;AAJG,CAAlB;AAOA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,UAAU,EAAE,KADY;AAExBC,EAAAA,IAAI,EAAE,IAFkB;AAGxBC,EAAAA,UAAU,EAAE;AAHY,CAArB,C,CAMP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,MAAM,GAAG,QAAf,C,CAA2B;;AAClC,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AAEP,OAAO,MAAMC,WAAW,GAAG;AACvBC,EAAAA,IAAI,EAAEJ;AADiB,CAApB;AAIP,OAAO,MAAMK,YAAY,GAAG;AACxBD,EAAAA,IAAI,EAAEH;AADkB,CAArB;AAGP,OAAO,MAAMK,YAAY,GAAIC,IAAD,IAAU;AAClC,SAAO;AACHH,IAAAA,IAAI,EAAEF,OADH;AAEHK,IAAAA,IAAI,EAAEA;AAFH,GAAP;AAIH,CALM;;AAOP,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGb,YAAT,EAAuBc,MAAvB,KAAmC;AAC/C,UAAQA,MAAM,CAACN,IAAf;AACI,SAAKJ,MAAL;AAAa;AACT,iCACOS,KADP;AAEIZ,UAAAA,UAAU,EAAE,IAFhB;AAGIC,UAAAA,IAAI,EAAEP;AAHV;AAKH;;AACD,SAAKU,OAAL;AAAc;AACV,iCACOQ,KADP;AAEIZ,UAAAA,UAAU,EAAE,KAFhB;AAGIC,UAAAA,IAAI,EAAE;AAHV;AAKH;;AACD,SAAKI,OAAL;AAAc;AACV,iCACOO,KADP;AAEI;AACA;AACA;AACAV,UAAAA,UAAU,EAAEW,MAAM,CAACH;AALvB;AAOH;;AACD;AAAS;AACL,iCACOE,KADP;AAGH;AA5BL;AA8BH,CA/BD;;AAiCA,eAAeD,OAAf","sourcesContent":["const dummyUser = {\n    nickname: '코드',\n    Post: [],\n    Followings: [],\n    Followers: [],      \n};\n\nexport const initialState = {\n    isLoggedIn: false,\n    user: null,\n    signupData: {},\n};\n\n// const dummy = {\n//     isLoggedIn: true,\n//     imagePaths: [],\n//     mainPosts: [{\n//         User: {\n//             id: 1,\n//             nickname: \"코드\",\n//         },\n//         content: \"첫 번째 게시글\",\n//         img: \"https://blog.yena.io/assets/post-img/171123-nachoi-300.jpg\"\n//     }],\n// };\n\nexport const LOG_IN = 'LOG_IN';   // 액션이 이름\nexport const LOG_OUT = 'LOG_OUT';\nexport const SIGN_UP = 'SIGN_UP';\n\nexport const loginAction = {\n    type: LOG_IN,\n};\n\nexport const logoutAction = {\n    type: LOG_OUT,\n}\nexport const signupAction = (data) => {\n    return {\n        type: SIGN_UP,\n        data: data,\n    };\n};\n\nconst reducer = (state = initialState, action ) => {\n    switch (action.type) {\n        case LOG_IN: {\n            return {\n                ...state,\n                isLoggedIn: true,\n                user: dummyUser,\n            }\n        }\n        case LOG_OUT: {\n            return {\n                ...state,\n                isLoggedIn: false,\n                user: null,\n            }\n        }\n        case SIGN_UP: {\n            return {\n                ...state,\n                // user: action.data.user,\n                // id: action.data.id,\n                // nick: action.data.nick,\n                signupData: action.data,\n            }\n        }\n        default: {\n            return {\n                ...state,\n            }\n        }\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}