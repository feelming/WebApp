{"ast":null,"code":"import { all, fork, put, takeLatest, delay } from 'redux-saga/effects';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from '../reducers/post';\n\nfunction addPostAPI() {}\n\nfunction* addPost() {\n  try {\n    yield delay(2000);\n    yield put({\n      type: ADD_POST_SUCCESS\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction addCommentAPI() {}\n\nfunction* addComment(action) {\n  try {\n    yield delay(2000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        postId: action.data.postId\n      }\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), // 이벤트 리스너로 이해, 순서 의미 없음\n  fork(watchAddComment)]);\n}","map":{"version":3,"sources":["/Users/mac/work/feelming/frontend/sagas/post.js"],"names":["all","fork","put","takeLatest","delay","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPostAPI","addPost","type","e","error","watchAddPost","addCommentAPI","addComment","action","data","postId","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,KAArC,QAAkD,oBAAlD;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,EAA6CC,gBAA7C,EACIC,mBADJ,EACyBC,mBADzB,EAC8CC,mBAD9C,QACyE,kBADzE;;AAGA,SAASC,UAAT,GAAsB,CAErB;;AAED,UAAUC,OAAV,GAAoB;AAChB,MAAG;AACC,UAAMR,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAAC;AACNW,MAAAA,IAAI,EAAEP;AADA,KAAD,CAAT;AAGH,GALD,CAKC,OAAOQ,CAAP,EAAU;AACP,UAAMZ,GAAG,CAAC;AACNW,MAAAA,IAAI,EAAEN,gBADA;AAENQ,MAAAA,KAAK,EAAED;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUE,YAAV,GAAyB;AACrB,QAAMb,UAAU,CAACE,gBAAD,EAAmBO,OAAnB,CAAhB;AACH;;AAED,SAASK,aAAT,GAAyB,CAExB;;AAED,UAAUC,UAAV,CAAqBC,MAArB,EAA6B;AACzB,MAAG;AACC,UAAMf,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAAC;AACNW,MAAAA,IAAI,EAAEJ,mBADA;AAENW,MAAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAEF,MAAM,CAACC,IAAP,CAAYC;AADlB;AAFA,KAAD,CAAT;AAMH,GARD,CAQC,OAAOP,CAAP,EAAU;AACP,UAAMZ,GAAG,CAAC;AACNW,MAAAA,IAAI,EAAEH,mBADA;AAENK,MAAAA,KAAK,EAAED;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUQ,eAAV,GAA4B;AACxB,QAAMnB,UAAU,CAACK,mBAAD,EAAsBU,UAAtB,CAAhB;AACH;;AAED,eAAe,UAAUK,QAAV,GAAqB;AAChC,QAAMvB,GAAG,CAAC,CACNC,IAAI,CAACe,YAAD,CADE,EACoB;AAC1Bf,EAAAA,IAAI,CAACqB,eAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { all, fork, put, takeLatest, delay } from 'redux-saga/effects';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\n    ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from '../reducers/post';\n\nfunction addPostAPI() {\n\n}\n\nfunction* addPost() {\n    try{\n        yield delay(2000);\n        yield put({\n            type: ADD_POST_SUCCESS,\n        });\n    }catch (e) {\n        yield put({\n            type: ADD_POST_FAILURE,\n            error: e,\n        })\n    }\n}\n\nfunction* watchAddPost() {\n    yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction addCommentAPI() {\n\n}\n\nfunction* addComment(action) {\n    try{\n        yield delay(2000);\n        yield put({\n            type: ADD_COMMENT_SUCCESS,\n            data: {\n                postId: action.data.postId,\n            },\n        });\n    }catch (e) {\n        yield put({\n            type: ADD_COMMENT_FAILURE,\n            error: e,\n        })\n    }\n}\n\nfunction* watchAddComment() {\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n    yield all([\n        fork(watchAddPost),       // 이벤트 리스너로 이해, 순서 의미 없음\n        fork(watchAddComment),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}